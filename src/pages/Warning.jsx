import React, { useState } from "react";
import Navbar from "../components/Navbar";
import { toast } from "react-toastify";
import { RiDeleteBinLine } from "react-icons/ri";
import { deleteWarning } from "../actions/warning/warning";
import { useWarnings } from "../customhooks/useWarnings";
import { getWarnings } from "../actions/warning/warning";
import { useSelector } from "react-redux";
import { roles } from "../actions/constants";
import { Navigate } from "react-router";
const Warning = () => {
  const [warnings, setWarnings] = useState([]);
  const User = useSelector((state) => state.user);
  useWarnings(setWarnings);
  const fetchdata = async () => {
    await getWarnings()
      .then((res) => {
        if (res && res.status === 200) {
          if (res.data.warnings && res.data.warnings.length > 0) {
            setWarnings(res.data.warnings);
          }
        }
      })
      .catch((err) => {
        toast.error(err.message);
      });
  };
  const handleDelete = async (wrn) => {
    if (User.role !== roles.ADMIN)
      return toast.error("You can't perform this action.");
    let res = window.confirm(`Do you really want to delete ${wrn.id}`);
    if (res) {
      await deleteWarning(wrn.id)
        .then(() => {
          toast.success(`${wrn.id} deleted successfully`);
          fetchdata();
        })
        .catch((err) => {
          toast.error(err.message);
        });
    }
  };
  if (!User.isLoggedIn) return <Navigate to="/login" />;
  return (
    <div>
      <Navbar />
      <h2 style={{ padding: "1rem" }} className="text-center">
        Warnings
      </h2>
      <div className="table-responsive tableContainer">
        <table className="table table-responsive \">
          <thead className="table-dark">
            <tr>
              <th scope="col">#</th>
              <th scope="col">Severity</th>
              <th scope="col">Description</th>
              <th scope="col">Generated By</th>
              <th scope="col">Delete</th>
              {/* <th scope="col">Edit</th> */}
            </tr>
          </thead>
          <tbody>
            {warnings &&
              warnings.filter((wrn) =>
              User.role === roles.DRIVER
                ? wrn.generatedBy._id === User._id
                : true
            ).map((wrn, index) => {
                return (
                  <tr key={index}>
                    <th scope="row">{index}</th>
                    <td>{wrn.severity ? wrn.severity : "–"}</td>
                    <td>{wrn.description ? wrn.description : "–"}</td>
                    <td>
                      {wrn.generatedBy
                        ? wrn.generatedBy.firstName && wrn.generatedBy.firstName
                          ? `${wrn.generatedBy.firstName} ${wrn.generatedBy.lastName}`
                          : "–"
                        : "-"}
                    </td>
                    <td>
                      <div
                        className="table_action table_action_del"
                        onClick={() => handleDelete(wrn)}
                      >
                        <RiDeleteBinLine />
                      </div>
                    </td>
                  </tr>
                );
              })}
          </tbody>
        </table>
      </div>
    </div>
  );
};

export default Warning;
